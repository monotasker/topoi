(dp1
S'output'
p2
S"<type 'exceptions.KeyError'> 'projects'"
p3
sS'layer'
p4
S'/home/ian/web2py/applications/topoi/models/topoi.py'
p5
sS'code'
p6
S'# coding: utf8\nfrom plugin_selectoradd import SelectOrAddOption, MULTISELECT_OR_ADD_OPTION\nfrom plugin_multiselect_widget import hmultiselect_widget, vmultiselect_widget\nfrom plugin_ajaxselect import AjaxSelect\nimport datetime\n\nmulti_add_option = MULTISELECT_OR_ADD_OPTION(form_title="Add new", controller="plugin_selectoradd", function="add", button_text = "Add New", dialog_width=500)\n\ndb.define_table(\'locations\',\n    Field(\'location\', \'string\'),\n    format=\'%(location)s\')\n\ndb.define_table(\'authors\',\n    Field(\'name\', \'string\', default=\'anonymous\'),\n    Field(\'location\', db.locations),\n    Field(\'lived\', \'string\'),\n    format=\'%(name)s\')\ndb.authors.location.widget = lambda field, value: AjaxSelect(field, value, \'locations\').widget()\n\ndb.define_table(\'works\',\n    Field(\'title\', \'string\'),\n    Field(\'author\', db.authors),\n    Field(\'date_earliest\'),\n    Field(\'date_latest\'),\n    Field(\'date_likely\'),\n    Field(\'genre\'),\n    Field(\'source\'),\n    Field(\'comments\'),\n    format=\'%(title)s\')\n\ndb.define_table(\'projects\',\n    Field(\'projectname\', \'string\'),\n    Field(\'owner\', db.auth_user, default=auth.user_id),\n    Field(\'description\', \'text\'),\n    format=\'%(projectname)s\')\n\ndb.define_table(\'tags\',\n    Field(\'tagname\', \'string\'),\n    Field(\'creator\', db.auth_user, default=auth.user_id),\n    Field(\'project\', db.projects),\n    format=\'%(tagname)s\')\n\ndb.define_table(\'notes\',\n    Field(\'user\', db.auth_user, default=auth.user_id),\n    Field(\'author\', db.authors),\n    Field(\'work\', db.works),\n    Field(\'reference\'),\n    Field(\'excerpt\', \'text\'),\n    Field(\'body\', \'text\'),\n    Field(\'tags\', \'list:reference db.tags\'),\n    Field(\'last_edited\', \'datetime\', default=datetime.datetime.utcnow(), writable=False),\n    Field(\'created\', \'datetime\', default=datetime.datetime.utcnow(), writable=False),\n    Field(\'project\', db.projects),\n    format=\'%(author)s, %(work)s, %(reference)s\')\ndb.notes.author.widget = lambda field, value: AjaxSelect(field, value, \'authors\', restrictor=\'work\').widget()\ndb.notes.work.widget = lambda field, value: AjaxSelect(field, value, \'works\').widget()\ndb.notes.tags.requires = IS_IN_DB(db, \'tags.id\', db.tags._format, multiple = True)\ndb.notes.projects.requires = IS_IN_DB(db, \'projects.id\', db.projects._format, multiple = True)\n#db.notes.tags.widget = lambda field, value: multi_add_option.widget(field, value, \'tags\')\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/ian/web2py/gluon/restricted.py", line 204, in restricted\n    exec ccode in environment\n  File "/home/ian/web2py/applications/topoi/models/topoi.py", line 58, in <module>\n    db.notes.projects.requires = IS_IN_DB(db, \'projects.id\', db.projects._format, multiple = True)\n  File "/home/ian/web2py/gluon/dal.py", line 5542, in __getattr__\n    return self[key]\n  File "/home/ian/web2py/gluon/dal.py", line 5482, in __getitem__\n    return dict.__getitem__(self, str(key))\nKeyError: \'projects\'\n'
p11
s.